import{c as y,o as M,g as o,a as x,i as c,b as f,d as N,e as E,s as g,f as R,t as _}from"./web.e14c6c7c.js";const z=_('<a class="relative hstack space-x-5 p-4 !no-underline !text-c" border="~ c hover:transparent" bg="hover:gray-100 dark:hover:gray-600" target="_blank" rel="noopener noreferrer"><div class="flex-auto"><div class="hstack flex-wrap"><div whitespace-nowrap mr-3></div><div hstack space-x-2><!#><!/><!#><!/></div></div><div mt-1 text="sm c-lighter">'),A=_("<span>"),H=_('<span hstack space-x-1><span i-noto-v1:star text-xs></span><span class="text-sm mt-0.5">'),P=t=>{const m="https://api.github.com/repos/"+t.project.repo,[d,u]=y(),p=async()=>(await fetch(m).then(i=>i.json())).stargazers_count;return M(async()=>t.project.repo&&u(await p())),(()=>{const r=o(z),i=r.firstChild,$=i.firstChild,v=$.firstChild,l=v.nextSibling,b=l.firstChild,[h,j]=x(b.nextSibling),S=h.nextSibling,[k,w]=x(S.nextSibling),C=$.nextSibling;return c(v,()=>t.project.name),c(l,(()=>{const e=f(()=>!!t.project.tech);return()=>e()&&t.project.tech.map(a=>(()=>{const n=o(A);return N(n,`text-xs ${a}`),n})())})(),h,j),c(l,(()=>{const e=f(()=>!!d());return()=>e()&&(()=>{const a=o(H),n=a.firstChild,s=n.nextSibling;return c(s,d),a})()})(),k,w),E(e=>{const a=t.project.link,n=t.project.name,s=t.project.desc;return a!==e._v$&&g(r,"href",e._v$=a),n!==e._v$2&&g(r,"title",e._v$2=n),s!==e._v$3&&R(C,e._v$3=s),e},{_v$:void 0,_v$2:void 0,_v$3:void 0}),r})()};export{P as default};
